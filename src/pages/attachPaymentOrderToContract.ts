import { Page, Locator, expect } from "@playwright/test";

export class UnrecognizedPaymentsRegistryPage {
  private page: Page;
  private registryTab;
  private attachPaymentButton;
  private contractNumberDropdown;
  private documentTypeDropdown;
  private documentTypeOption;
  private paymentDateInput;
  private paymentNumberInput;
  private attachButton;

  constructor(page: Page) {
    this.page = page;
    this.registryTab = page.getByRole("link", {
      name: "–†–µ–µ—Å—Ç—Ä –Ω–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π",
    });
    this.attachPaymentButton = page.locator(
      "tbody tr:first-child .el-button.el-button--primary"
    );
    this.contractNumberDropdown = page.getByRole("combobox", {
      name: "*–ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞",
    });
    this.documentTypeDropdown = page.getByRole("combobox", {
      name: "*–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞",
    });
    this.documentTypeOption = page.getByText(
      "–ü–ª–∞—Ç–µ–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç (–≥–æ—Å–ø–æ—à–ª–∏–Ω–∞) –º–∏—Ä–æ–≤–æ–≥–æ —Å—É–¥–∞"
    );
    this.paymentDateInput = page.getByRole("textbox", { name: "*–î–∞—Ç–∞ –æ–ø–ª–∞—Ç—ã" });
    this.paymentNumberInput = page.getByRole("textbox", {
      name: "*–ù–æ–º–µ—Ä –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø–æ—Ä—É—á–µ–Ω–∏—è",
    });
    this.attachButton = page.getByRole("button", {
      name: "–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç",
    });
  }

  async attachPaymentOrderToContract(contractNumber: string) {
    if (!contractNumber) {
      throw new Error(
        "‚ùå –û—à–∏–±–∫–∞: –ù–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –≤ `attachPaymentOrderToContract`!"
      );
    }

    console.log(
      "üîπ –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–∫–ª–∞–¥–∫—É '–†–µ–µ—Å—Ç—Ä –Ω–µ—Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π'..."
    );
    await this.registryTab.click();
    await this.page.waitForLoadState("networkidle");

    console.log("üîπ –ò—â–µ–º –ø–ª–∞—Ç–µ–∂–Ω–æ–µ –ø–æ—Ä—É—á–µ–Ω–∏–µ...");
    await this.page.waitForTimeout(2000);

    console.log("üîπ –ù–∞–∂–∏–º–∞–µ–º '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å –ø–ª–∞—Ç–µ–∂–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∫ –¥–æ–≥–æ–≤–æ—Ä—É'...");
    await this.attachPaymentButton.click();
    await this.page.waitForLoadState("networkidle");

    console.log(`üîπ –í—ã–±–∏—Ä–∞–µ–º –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞: ${contractNumber}...`);
    await this.contractNumberDropdown.click();
    await this.contractNumberDropdown.fill(contractNumber);

    // üîπ –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ API-–∑–∞–ø—Ä–æ—Å–∞
    await this.page.waitForResponse(
      (response) =>
        response.url().includes("/api/v1/contract/table") &&
        response.status() === 200
    );

    // üîπ –ù–∞—Ö–æ–¥–∏–º –∏ –∫–ª–∏–∫–∞–µ–º –ø–æ –Ω—É–∂–Ω–æ–º—É –¥–æ–≥–æ–≤–æ—Ä—É –≤ —Å–ø–∏—Å–∫–µ
    const selectedContract = this.page.locator(".el-select-dropdown__item", {
      hasText: contractNumber,
    });
    await selectedContract.click();

    await this.page.waitForResponse(
      (response) =>
        response.url().includes("/api/v1/contract/table") &&
        response.status() === 200
    );

    console.log("üîπ –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞...");
    await this.documentTypeDropdown.click();
    await this.documentTypeOption.click();

    console.log("üîπ –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞—Ç—É –æ–ø–ª–∞—Ç—ã...");
    const today = new Date().toISOString().split("T")[0];
    await this.paymentDateInput.fill(today);

    console.log("üîπ –ó–∞–ø–æ–ª–Ω—è–µ–º –Ω–æ–º–µ—Ä –ø–ª–∞—Ç–µ–∂–Ω–æ–≥–æ –ø–æ—Ä—É—á–µ–Ω–∏—è...");
    await this.paymentNumberInput.fill("7777");

    console.log("üîπ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É –ø–ª–∞—Ç–µ–∂–∞...");
    await this.attachButton.click();

    console.log("‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!");
  }
}
